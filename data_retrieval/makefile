# Data Retrieval Makefile

# Variables
PYTHON = python
CLI_SCRIPT = cli_extract.py
CONFIG_FILE = config.ini

# Default target
.PHONY: help
help:
	@echo "Available targets:"
	@echo "  test-cli-skeleton    - Test CLI with skeleton extraction (dry run)"
	@echo "  test-cli-objects     - Test CLI with object extraction (dry run)"
	@echo "  test-cli-frame       - Test CLI with frame extraction (dry run)"
	@echo "  test-cli-help        - Show CLI help"
	@echo "  test-config          - Test configuration loading"
	@echo "  test-sentry          - Test Sentry integration by triggering an exception"
	@echo "  setup-secrets        - Create secrets.ini from template"
	@echo "  clean                - Clean temporary files"
	@echo "  install              - Install dependencies"

# CLI Testing targets
.PHONY: test-cli-skeleton
test-cli-skeleton:
	@echo "Testing CLI with skeleton extraction..."
	$(PYTHON) $(CLI_SCRIPT) skeleton --dry-run --verbose

.PHONY: test-cli-objects
test-cli-objects:
	@echo "Testing CLI with object extraction..."
	$(PYTHON) $(CLI_SCRIPT) objects --dry-run --verbose

.PHONY: test-cli-frame
test-cli-frame:
	@echo "Testing CLI with frame extraction..."
	$(PYTHON) $(CLI_SCRIPT) frame --dry-run --verbose

.PHONY: test-cli-help
test-cli-help:
	@echo "Showing CLI help..."
	$(PYTHON) $(CLI_SCRIPT) --help

.PHONY: test-config
test-config:
	@echo "Testing configuration loading..."
	$(PYTHON) config_manager.py

.PHONY: test-sentry
test-sentry:
	@echo "Testing Sentry integration..."
	$(PYTHON) $(CLI_SCRIPT) --test-sentry

# Setup
.PHONY: setup-secrets
setup-secrets:
	@if [ ! -f secrets.ini ]; then \
		echo "Creating secrets.ini from template..."; \
		cp secrets.ini.template secrets.ini; \
		echo "‚úÖ secrets.ini created! Please edit it with your actual secrets."; \
		echo "üìñ See SECRETS_README.md for instructions."; \
	else \
		echo "‚ö†Ô∏è  secrets.ini already exists."; \
	fi

# Installation
.PHONY: install
install:
	pip install -r requirements.txt

# Cleanup
.PHONY: clean
clean:
	@echo "Cleaning temporary files..."
	find . -type f -name "*.pyc" -delete
	find . -type d -name "__pycache__" -exec rm -rf {} +
	rm -f *.log